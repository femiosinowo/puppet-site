classes:
  - roles::server_elkstack


logstash::input: 'profiles/logstash/server/centos-messages-input.erb'
logstash::filter: 'profiles/logstash/server/centos-messages-filter.erb'
logstash::output: 'profiles/logstash/server/centos-messages-output.erb'
  
  
sensu::subscriptions:
  - all
  - elk
  

sensu::checks:
  'check-logstash':
    command: '/opt/sensu/embedded/bin/handler-logstash'
    subscribers: 'elk'
  'check-es-node-status':
    command: '/opt/sensu/embedded/bin/check-es-node-status.rb'
    subscribers: 'elk'
  'check-es-cluster-health':
    command: '/opt/sensu/embedded/bin/check-es-cluster-health.rb'
    subscribers: 'elk'    
  'metrics-es-cluster':
    command: '/opt/sensu/embedded/bin/metrics-es-cluster.rb'
    subscribers: 'elk'
  'check-uchiwa-health':
    command: '/opt/sensu/embedded/bin/check-uchiwa-health.rb'
    subscribers: 'elk'
  'check-haproxy':
    command: '/opt/sensu/embedded/bin/check-haproxy.rb -S localhost'
    subscribers: 'elk'    
  
consul::services:
  elasticsearch:
    port: 9200
    token: "%{hiera('consul::service_write_token')}"
    tags:
      - elasticsearch
    checks:
     - id: "elasticsearch-healthcheck"
       name: "Healthcheck for elasticsearch service %{::server_role} in %{::environment}"
       service_id: "%{::environment}-%{::server_role}-elasticsearch"
       tcp: "localhost:9200"
       interval: '10s'
       timeout: '1s'
  kibana:
    port: 5601
    token: "%{hiera('consul::service_write_token')}"
    tags:
      - kibana
    checks:
     - id: "kibana-healthcheck"
       name: "Healthcheck for kibana service %{::server_role} in %{::environment}"
       service_id: "%{::environment}-%{::server_role}-kibana"
       http: "https://%{::fqdn}:5601"
       interval: '10s'
       timeout: '1s'
  logstash:
    port: 5044
    token: "%{hiera('consul::service_write_token')}"
    tags:
      - logstash
    checks:
     - id: "logstash-healthcheck"
       name: "Healthcheck for logstash service %{::server_role} in %{::environment}"
       service_id: "%{::environment}-%{::server_role}-logstash"
       tcp: "localhost:5044"
       interval: '10s'
       timeout: '1s'
       
firewalld::ports:
  'Open port 5044 in the public zone':
    ensure: present
    zone: public
    port: 5044
    protocol: 'tcp'    
  'Open port 5601 in the public zone':
    ensure: present
    zone: public
    port: 5601
    protocol: 'tcp'
  'Open port 9200 in the public zone':
    ensure: present
    zone: public
    port: 9200
    protocol: 'tcp'